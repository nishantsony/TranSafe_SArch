/*
 * File: app/controller/Navigation.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TranSafe.controller.Navigation', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            surveypanel: 'panel#surveypanel',
            mynavigationview: 'panel#mynavigationview',
            logOutBtn: 'button#logOutBtn',
            logInBtn: 'button#logInBtn',
            welcomeUsernameId: 'label#welcomeUsernameId'
        },

        control: {
            "#surveypanel": {
                activate: 'onSurveypanelActivate'
            },
            "#mynavigationview": {
                activate: 'onMynavigationviewActivate'
            }
        }
    },

    onSurveypanelActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        console.log('Survey panel activated');
        console.log('logged status is: ' + localStorage.getItem('ifLogged'));
        if(localStorage.getItem('ifLogged') == 'Invalid User' | localStorage.getItem('ifLogged') === '' | localStorage.getItem('ifLogged') == 'null' | localStorage.getItem('ifLogged') === null){
        //     this.getGreetingLabel().hide();
        //     this.getSignOutBtn().hide();
        // //     this.getSignInBtn().show();
        // //     this.getSignUpBtn().show();
        }
        else{
            var username = localStorage.getItem('username');
            console.log('name: ' + username);
        //     this.getGreetingLabel().setHtml('Hello, ' + username);
        //     this.getGreetingLabel().show();
        //     this.getSignOutBtn().show();
        // //     this.getSignInBtn().hide();
        // //     this.getSignUpBtn().hide();
            }

        //this.getSadFacePic.setHeight(this.getSliderHappySad().getHeight());
    },

    onMynavigationviewActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        console.log('Survey panel activated');
        console.log('logged status is: ' + localStorage.getItem('ifLogged'));
        if(localStorage.getItem('ifLogged') == 'Invalid User' | localStorage.getItem('ifLogged') === '' | localStorage.getItem('ifLogged') == 'null' | localStorage.getItem('ifLogged') === null){
        //     this.getGreetingLabel().hide();
        //     this.getSignOutBtn().hide();
        // //     this.getSignInBtn().show();
        // //     this.getSignUpBtn().show();
                this.getLogOutBtn().hide();
            this.getLogInBtn().setHeight(75);
            this.getWelcomeUsernameId().hide();

        }
        else{
            var username = localStorage.getItem('username');
            console.log('name: ' + username);
            this.getLogOutBtn().show();
             this.getLogInBtn().setHeight(37);
            this.getWelcomeUsernameId().show();
            this.getWelcomeUsernameId().setHtml('Welcome, ' + username);
        //     this.getGreetingLabel().show();
        //     this.getSignOutBtn().show();
        // //     this.getSignInBtn().hide();
        // //     this.getSignUpBtn().hide();
            }

        //this.getSadFacePic.setHeight(this.getSliderHappySad().getHeight());
    }

});